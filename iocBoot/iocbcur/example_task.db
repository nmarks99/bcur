record(bo, "$(P)$(R)RunTask")
{
    field(FLNK, "$(P)$(R)TaskRunner.PROC")
}

record(luascript, "$(P)$(R)TaskRunner")
{
    field(CODE, "@example_task.lua main()")
}

record(ai, "$(P)$(R)RTDE:DigitalOutputBits")
{
    field(DESC, "Digital output bits (18bits)")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))DIGITAL_OUTPUT_BITS")
    field(FLNK, "$(P)$(R)TaskWaiting.PROC")
    field(SCAN, "I/O Intr")
}

# this extracts the n'th bit from A
# ((A & (1 << n)) != 0) ? 1 : 0 
# and passes the value on to ContinueIfDone
record(calcout, "$(P)$(R)TaskWaiting")
{
    field(INPA, "$(P)$(R)RTDE:DigitalOutputBits.VAL")
    field(CALC, "((A & (1 << 0)) != 0) ? 1 : 0")
    field(FLNK, "$(P)$(R)ContinueIfDone.PROC")
}

record(calcout, "$(P)$(R)ContinueIfDone")
{
    field(INPA, "$(P)$(R)TaskWaiting NPP")
    field(CALC, "A")
    field(OOPT, "Transition To Zero")
    field(OUT, "$(P)TaskRunner PP")
}
